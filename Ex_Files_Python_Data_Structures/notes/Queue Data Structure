The Queue DS is similar to a queue in real life (line) in that you have an arrival order in
wish you wish to maintain

Applications of the Queue Data Structure:

*CPU scheduling
*Data is transferred asynchronously between two processes (we need some way of maintaining the original
order
*Graph traversal algorithms

Many other applications: Often when a resource is to be shared among multiple consumers
is when a Queue becomes relevant:

*Transport and operations management
*File servers
*IO buffers
*Printer queues
*Phone Calls to customer service hotlines
*Resource is shared among multiple consumers

A Queue is a data structure in which all additions are made at one end (called the Rear or Tail of the queue),
    All deletions are from the other end (Front or head of the queue is where things are removed)

Which end serves as the head or the tail is an implementation detail
    -In this course we'll consider the head to be the left hand side of the queue
    and the right to be the tail

The Queue is a First In First Out data structure (FIFO) - in contrast to the stack which is (FILO)

enqueue() = add an item to the end of the queue
dequeue() = remove and return the item at the front

